{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","react_default","a","createElement","style","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","onClick","Navbar","concat","mode","react_router_dom","to","title","aria-label","aria-current","aboutText","href","role","toggleMode","aria-checked","htmlFor","TexthtmlForm","text","setText","Fragment","heading","name","onChange","event","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","setInterval","components_Alert","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ecd0f969.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    const [myStyle, setMyStyle] = useState({\r\n        color: '#000',\r\n        backgroundColor: 'rgba(84, 171, 134, 0.3)'\r\n    });\r\n    const [btnText, setBtnText] = useState('Enable Dark Mode');\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color === '#000'){\r\n            setMyStyle({\r\n                color: '#fff',\r\n                backgroundColor: '#000'\r\n            });\r\n            setBtnText('Enable Light Mode');\r\n        }else{\r\n            setMyStyle({\r\n                color: '#000',\r\n                backgroundColor: 'rgba(84, 171, 134, 0.3)'\r\n            });\r\n            setBtnText('Enable Dark Mode');\r\n        }\r\n    }\r\n  return (\r\n    <div style={myStyle} className=\"py-5 h-100\">\r\n        <div className=\"container\">\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\"  style={myStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" onClick={toggleStyle} className='btn btn-primary mt-5' style={myStyle}>{btnText}</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","//import React, { useState } from 'react'\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props){\r\n    return(\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to=\"./\">{props.title}</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"./\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"./about\">{props.aboutText}</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"./\">Contact Us</a>\r\n                    </li>\r\n                </ul>     \r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" aria-checked=\"false\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                </div>          \r\n            </div>\r\n        </div>        \r\n    </nav>\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here',\r\n    aboutText: 'About Text Here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TexthtmlForm(props) {\r\nconst [text, setText] = useState('');\r\nconst handleUpClick = ()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to Uppercase', 'success');\r\n}\r\nconst handleLowClick = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert('Converted to Lowercase', 'success');\r\n}\r\nconst handleClearClick = ()=>{\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert('Text Cleared', 'success');\r\n}\r\nconst handleCopy = ()=>{\r\n    let text = document.getElementById('mypops');\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert('Text Copied', 'success');\r\n}\r\nconst handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert('Removed Extra Spaces', 'success');\r\n}\r\nconst handleOnChange = (event)=>{\r\n    setText(event.target.value);\r\n}\r\n  return (\r\n      <>\r\n    <div className=\"container\" style={{ color: (props.mode === 'dark') ? 'white' : '#053452' }}>      \r\n        <h3 className='my-4 heading'>{props.heading}</h3>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" name=\"mypops\" id=\"mypops\" style={{ backgroundColor: (props.mode === 'dark') ? 'grey' : 'white', color: (props.mode === 'dark') ? 'white' : '#053452' }} onChange={handleOnChange} value={text} rows=\"10\"></textarea>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert To Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n            <button className=\"btn btn-danger mx-2\" onClick={handleClearClick}>Clear</button>            \r\n        </div>\r\n    </div>\r\n    <div className=\"container my-3\" style={{ color: (props.mode === 'dark') ? 'white' : '#053452' }}>\r\n        <h3>Your Text Summary</h3>\r\n        <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n        <p>{0.008 * text.split(' ').length} Minutes Read</p>\r\n        <h3>Preview</h3>\r\n        <div>{text.length > 0 ? text : 'Enter Something Into Above Textbox to Preview...'}</div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nfunction Alert(props){\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return(\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    );\r\n}\r\nexport default Alert;","import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nfunction App() {\n    const [mode, setMode] = useState('light');\n    const [alert, setAlert] = useState(null);\n    const showAlert = (message, type)=>{\n          setAlert({\n            msg: message,\n            type: type\n        });\n        setTimeout(()=>{\n            setAlert(null);\n        }, 1500);\n    };\n  \n    const toggleMode = ()=>{\n        if(mode === 'light'){\n            setMode('dark');\n            document.body.style.backgroundColor = '#053452';\n            showAlert('Dark Mode Enabled!', 'success');\n            // document.title = 'Text Utils - Dark Mode';\n            setInterval(()=>{\n                document.title = 'Text Utils is Amazing';\n            }, 1000);\n            setInterval(()=>{\n                document.title = 'Install Text Utils Now';\n            }, 1500);\n        }else{\n            setMode('light');\n            document.body.style.backgroundColor = '#fff';\n            showAlert('Light Mode Enabled!', 'success');\n            document.title = 'Text Utils - Light Mode';\n        }\n    }\n    return ( \n    <>  \n    <Router>\n        <Navbar title=\"TextUtils\" aboutText=\"About Us\" mode={mode} toggleMode={toggleMode}></Navbar>\n        <Alert alert={alert}></Alert>\n        <Routes>\n            <Route exact path=\"/about\" element={<About/>}/>\n            <Route exact path=\"/\" element={<TextForm heading='Enter The Text To Analyse' mode={mode} showAlert={showAlert}   />} />\n        </Routes>\n    </Router> \n    </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}